/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_RPMCONTROL_H
#define _MOCK_RPMCONTROL_H

#include "RPMControl.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mock_RPMControl_Init(void);
void Mock_RPMControl_Destroy(void);
void Mock_RPMControl_Verify(void);




#define RPMControl_init_Ignore() RPMControl_init_CMockIgnore()
void RPMControl_init_CMockIgnore(void);
#define RPMControl_init_Expect(minDuty, maxDuty, targetRPM, thHighRPM, thLowRPM) RPMControl_init_CMockExpect(__LINE__, minDuty, maxDuty, targetRPM, thHighRPM, thLowRPM)
void RPMControl_init_CMockExpect(UNITY_LINE_TYPE cmock_line, unsigned char minDuty, unsigned char maxDuty, int targetRPM, int thHighRPM, int thLowRPM);
typedef void (* CMOCK_RPMControl_init_CALLBACK)(unsigned char minDuty, unsigned char maxDuty, int targetRPM, int thHighRPM, int thLowRPM, int cmock_num_calls);
void RPMControl_init_StubWithCallback(CMOCK_RPMControl_init_CALLBACK Callback);
#define RPMControl_init_IgnoreArg_minDuty() RPMControl_init_CMockIgnoreArg_minDuty(__LINE__)
void RPMControl_init_CMockIgnoreArg_minDuty(UNITY_LINE_TYPE cmock_line);
#define RPMControl_init_IgnoreArg_maxDuty() RPMControl_init_CMockIgnoreArg_maxDuty(__LINE__)
void RPMControl_init_CMockIgnoreArg_maxDuty(UNITY_LINE_TYPE cmock_line);
#define RPMControl_init_IgnoreArg_targetRPM() RPMControl_init_CMockIgnoreArg_targetRPM(__LINE__)
void RPMControl_init_CMockIgnoreArg_targetRPM(UNITY_LINE_TYPE cmock_line);
#define RPMControl_init_IgnoreArg_thHighRPM() RPMControl_init_CMockIgnoreArg_thHighRPM(__LINE__)
void RPMControl_init_CMockIgnoreArg_thHighRPM(UNITY_LINE_TYPE cmock_line);
#define RPMControl_init_IgnoreArg_thLowRPM() RPMControl_init_CMockIgnoreArg_thLowRPM(__LINE__)
void RPMControl_init_CMockIgnoreArg_thLowRPM(UNITY_LINE_TYPE cmock_line);
#define RPMControl_compute_IgnoreAndReturn(cmock_retval) RPMControl_compute_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void RPMControl_compute_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, unsigned char cmock_to_return);
#define RPMControl_compute_ExpectAndReturn(currRPM, cmock_retval) RPMControl_compute_CMockExpectAndReturn(__LINE__, currRPM, cmock_retval)
void RPMControl_compute_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int currRPM, unsigned char cmock_to_return);
typedef unsigned char (* CMOCK_RPMControl_compute_CALLBACK)(int currRPM, int cmock_num_calls);
void RPMControl_compute_StubWithCallback(CMOCK_RPMControl_compute_CALLBACK Callback);
#define RPMControl_compute_IgnoreArg_currRPM() RPMControl_compute_CMockIgnoreArg_currRPM(__LINE__)
void RPMControl_compute_CMockIgnoreArg_currRPM(UNITY_LINE_TYPE cmock_line);

#endif
